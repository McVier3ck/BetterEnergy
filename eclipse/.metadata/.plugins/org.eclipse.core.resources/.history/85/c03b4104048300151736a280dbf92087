package tk.mcvier3ck.moreenergy.block;

import java.util.Random;

import cpw.mods.fml.common.network.internal.FMLNetworkHandler;
import net.minecraft.block.BlockContainer;
import net.minecraft.block.material.Material;
import net.minecraft.client.renderer.texture.IIconRegister;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.Item;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.IIcon;
import net.minecraft.world.World;
import tk.mcvier3ck.moreenergy.MoreEnergy;
import tk.mcvier3ck.moreenergy.tileentity.TileEntityRegistry;
import tk.mcvier3ck.moreenergy.tileentity.machine.TileEntityEnergyStorageLow;

public class EnergyStorageBlock extends BlockContainer {
	
	public static IIcon frontIcon;
	public static IIcon frontIcon_active;

	public EnergyStorageBlock(Material material) {

		super(material);
		setHardness(5.0F);
		setResistance(10.0F);
		setStepSound(soundTypeMetal);
		setCreativeTab(MoreEnergy.tabMoreEnergy);

		setHarvestLevel("pickaxe", 2);
		setHarvestLevel("pickaxe", 1, 0);
		setHarvestLevel("pickaxe", 1, 1);
		setHarvestLevel("pickaxe", 3, 6);
		setHarvestLevel("pickaxe", 3, 12);

	}
	
	@Override
	public Item getItemDropped(int i, Random random, int j) {

		return Item.getItemFromBlock(TileEntityRegistry.EnergyInfuser);
	}
	
	@Override
	public void registerBlockIcons(IIconRegister reg) {

		this.blockIcon = reg.registerIcon("MoreEnergy:MachineBlock_Side");
		this.frontIcon = reg.registerIcon("MoreEnergy:EnergyInfuser");
		this.frontIcon_active = reg.registerIcon("MoreEnergy:EnergyInfuser_Work");

	}

	@Override
	public IIcon getIcon(int side, int meta) {
		if (meta == 1)
			return frontIcon_active;
		if (side == 2 && meta == 6)
			return frontIcon_active;
		if (side == 3 && meta == 7)
			return frontIcon_active;
		if (side == 4 && meta == 8)
			return frontIcon_active;
		if (side == 5 && meta == 9)
			return frontIcon_active;

		return side == meta ? frontIcon : blockIcon;
	}

	public static void updateWork(boolean active, World world, int x, int y, int z) {

		int meta = world.getBlockMetadata(x, y, z);

		if (!active) {
			if (meta == 6) {
				world.setBlockMetadataWithNotify(x, y, z, 2, 2);
			} else if (meta == 7) {
				world.setBlockMetadataWithNotify(x, y, z, 3, 2);
			} else if (meta == 8) {
				world.setBlockMetadataWithNotify(x, y, z, 4, 2);
			} else if (meta == 9) {
				world.setBlockMetadataWithNotify(x, y, z, 5, 2);
			}
		} else {
			if (meta == 2) {
				world.setBlockMetadataWithNotify(x, y, z, 6, 2);
			} else if (meta == 3) {
				world.setBlockMetadataWithNotify(x, y, z, 7, 2);
			} else if (meta == 4) {
				world.setBlockMetadataWithNotify(x, y, z, 8, 2);
			} else if (meta == 5) {
				world.setBlockMetadataWithNotify(x, y, z, 9, 2);
			}
		}

	}

	

	@Override
	public boolean onBlockActivated(World world, int x, int y, int z, EntityPlayer player, int side, float hitx,
			float gity, float hitz) {

		TileEntity entity = world.getTileEntity(x, y, z);
		if (world.isRemote) {
			return true;
		} else if (entity != null) {
			FMLNetworkHandler.openGui(player, MoreEnergy.instance, MoreEnergy.EnergyStorageID, world, x, y, z);

		}

		return true;

	}

	@Override
	public TileEntity createNewTileEntity(World world, int side) {

		return new TileEntityEnergyStorageLow();
	}

}
